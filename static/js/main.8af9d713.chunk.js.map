{"version":3,"sources":["core/Expression.ts","core/FunctionXY.ts","core/FunctionCX.ts","core/ExactSolution.ts","core/NumericalSolution.ts","core/EulerSolution.ts","core/RungeKutteSolution.ts","core/ImprovedEulerSolution.ts","components/ControlBoard.tsx","components/Graph.tsx","components/SolutionsGraph.tsx","components/LocalErrorGraph.tsx","components/GlobalErrorGraph.tsx","App.tsx","index.tsx"],"names":["Expression","expr","this","params","importStr","paramsInitStr","Object","entries","reduce","prev","variable","value","eval","e","Error","FunctionXY","x","y","evaluate","FunctionCX","c","ExactSolution","func","name","x0","y0","X","n","dx","res","c0","i","push","NumericalSolution","calculateNewY","exact","yPrev","Math","abs","nStart","nEnd","sol","solveIVP","exactSol","max","length","EulerSolution","der","NumerialSolution","RungeKutteSolution","k1","k2","k3","ImprovedEulerSolution","ControlBoard","props","onChange","onChangeFunc","N","startN","endN","yPrime","Grid","container","item","xs","TextField","id","label","type","InputLabelProps","shrink","margin","variant","React","Component","Graph","state","dimensions","width","setState","offsetWidth","graphs","title","data","map","line","shape","mode","marker","color","layout","height","ref","el","renderContent","getColorByName","SolutionsGraph","solutions","solution","evaluateGraphs","LocalErrorGraph","exactSolution","localErrors","evaluateLocalErrors","GlobalErrorGraph","globalErrors","nextProps","nextState","nextContext","evaluateGlobalErrors","App","derivative","analyticalSolution","euler","improvedEuler","rungeKutte","numericalSolutions","concat","isInt","key","event","v","parseInt","parseFloat","target","prevState","className","spacing","md","lg","change","bind","changeFunc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8af9d713.chunk.js","sourcesContent":["type Params = { [key: string]: number }\n\nclass Expression {\n  expr: string\n\n  constructor (expr: string) {\n    this.expr = expr\n  }\n\n  evaluate (params: Params): number {\n    const importStr = `const sin = Math.sin; const cos = Math.cos; const exp = Math.exp; const e = Math.E; const pi = Math.PI; const sqrt = Math.sqrt;`\n    const paramsInitStr = Object.entries(params).reduce((prev, [variable, value]) => `${ prev }let ${ variable } = ${ value };`, '')\n    try {\n      return eval(`${importStr} ${ paramsInitStr } ${ this.expr }`)\n    } catch (e) {\n      throw Error('Failed to substitute parameters')\n    }\n  }\n}\n\nexport default Expression\n","import Expression from './Expression'\n\nclass FunctionXY {\n  expr: Expression\n\n  constructor (expr: string) {\n    this.expr = new Expression(expr)\n  }\n\n  evaluate (x: number, y: number): number {\n    return this.expr.evaluate({ x, y })\n  }\n}\n\nexport default FunctionXY\n","import Expression from './Expression'\n\nclass FunctionCX {\n  expr: Expression\n\n  constructor (expr: string) {\n    this.expr = new Expression(expr)\n  }\n\n  evaluate (c: number, x: number): number {\n    return this.expr.evaluate({ c, x })\n  }\n}\n\nexport default FunctionCX\n","import ISolution, { Points } from './ISolution'\nimport FunctionCX from './FunctionCX'\nimport FunctionXY from './FunctionXY'\n\nclass ExactSolution implements ISolution {\n  name: string = 'Exact solution'\n  func: FunctionCX\n  c: FunctionXY\n\n  constructor(func: FunctionCX, c: FunctionXY) {\n    this.func = func\n    this.c = c\n  }\n\n  solveIVP (x0: number, y0: number, X: number, n: number): Points {\n    const dx = (X - x0) / n\n    const res: Points = {x: [], y: []}\n    const c0 = this.c.evaluate(x0, y0)\n    for (let i = 0, x = x0; i <= n; i++, x += dx) {\n      res.x.push(x)\n      res.y.push(this.func.evaluate(c0, x))\n    }\n    return res\n  }\n}\n\nexport default ExactSolution\n","import ISolution, { Points } from './ISolution'\nimport FunctionXY from './FunctionXY'\nimport ExactSolution from './ExactSolution'\n\nabstract class NumericalSolution implements ISolution {\n  abstract name: string\n  func: FunctionXY\n\n  constructor (func: FunctionXY) {\n    this.func = func\n  }\n\n  solveIVP (x0: number, y0: number, X: number, n: number): Points {\n    const dx = (X - x0) / n\n    const res: Points = { x: [], y: [] }\n    for (let i = 0, x = x0, y = y0; i <= n; i++, x += dx) {\n      res.x.push(x)\n      res.y.push(y)\n      y = this.calculateNewY(x, y, this.func, dx)\n    }\n    return res\n  }\n\n  abstract calculateNewY (x: number, y: number, der: FunctionXY, dx: number): number\n\n  localErrors (x0: number, y0: number, X: number, n: number, exact: ExactSolution): Points {\n    const dx = (X - x0) / n\n    const res: Points = { x: [x0], y: [0] }\n    const c = exact.c.evaluate(x0, y0)\n    for (let x = x0 + dx, y = y0; x <= x0 + dx * n; x += dx) {\n      res.x.push(x)\n      const yPrev = exact.func.evaluate(c, x - dx)\n      y = this.calculateNewY(x - dx, yPrev, this.func, dx)\n      res.y.push(Math.abs(y - exact.func.evaluate(c, x)))\n    }\n    return res\n  }\n\n  globalErrors (x0: number, y0: number, X: number, nStart: number, nEnd: number, exact: ExactSolution): Points {\n    const res: Points = { x: [], y: [] }\n    for (let n = nStart; n <= nEnd; n++) {\n      res.x.push(n)\n      const sol = this.solveIVP(x0, y0, X, n)\n      const exactSol = exact.solveIVP(x0, y0, X, n)\n      let max = 0\n      for (let i = 0; i < sol.y.length; i++) {\n        max = Math.max(max, Math.abs(exactSol.y[i] - sol.y[i]))\n      }\n      res.y.push(max)\n    }\n    return res\n  }\n}\n\nexport default NumericalSolution\n","import NumerialSolution from './NumericalSolution'\nimport FunctionXY from './FunctionXY'\n\nclass EulerSolution extends NumerialSolution {\n  name: string = 'Euler solution'\n\n  calculateNewY (x: number, y: number, der: FunctionXY, dx: number): number {\n    return y + der.evaluate(x, y) * dx\n  }\n}\n\nexport default EulerSolution\n","import NumerialSolution from './NumericalSolution'\nimport FunctionXY from './FunctionXY'\n\nclass RungeKutteSolution extends NumerialSolution {\n  name: string = 'Runge-Kutte solution'\n\n  calculateNewY (x: number, y: number, der: FunctionXY, dx: number): number {\n    const k1 = der.evaluate(x, y)\n    const k2 = der.evaluate(x + dx / 2, y + dx * k1 / 2)\n    const k3 = der.evaluate(x + dx / 2, y + dx * k2 / 2)\n    const k4 = der.evaluate(x + dx, y + dx * k3)\n    return y + (k1 + k2 * 2 + k3 * 2 + k4) * dx / 6\n  }\n}\n\nexport default RungeKutteSolution\n","import NumerialSolution from './NumericalSolution'\nimport FunctionXY from './FunctionXY'\n\nclass ImprovedEulerSolution extends NumerialSolution {\n  name: string = 'Improved euler solution'\n\n  calculateNewY (x: number, y: number, der: FunctionXY, dx: number): number {\n    const k1 = der.evaluate(x, y)\n    const k2 = der.evaluate(x + dx, y + dx * k1)\n    return y + (k1 + k2) * dx / 2\n  }\n}\n\nexport default ImprovedEulerSolution\n","import React from 'react'\nimport { Grid, TextField } from '@material-ui/core'\n\ntype ControlBoardProps = {\n  onChange: (isInt: boolean, key: 'N' | 'X' | 'x0' | 'y0' | 'startN' | 'endN' | 'y' | 'yPrime' | 'c') => (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onChangeFunc: (key: 'N' | 'X' | 'x0' | 'y0' | 'startN' | 'endN' | 'y' | 'yPrime' | 'c') => (event: React.ChangeEvent<HTMLInputElement>) => void,\n  yPrime: string,\n  y: string,\n  c: string,\n  N: number,\n  X: number,\n  x0: number,\n  y0: number,\n  startN: number,\n  endN: number\n}\n\nclass ControlBoard extends React.Component<ControlBoardProps> {\n  render () {\n    const { onChange, onChangeFunc, N, X, x0, y0, startN, endN, yPrime, y, c } = this.props\n    return (\n      <Grid container>\n        <h3>Input functions here:</h3>\n        <Grid container>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"y'=f(x,y)\"\n              value={ yPrime }\n              onChange={ onChangeFunc('yPrime') }\n              type=\"text\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"y=f(x)\"\n              value={ y }\n              onChange={ onChangeFunc('y') }\n              type=\"text\"\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"c=f(x,y)\"\n              value={ c }\n              onChange={ onChangeFunc('c') }\n              type=\"text\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n        <h3>Input grid size, IVP and maximum x here:</h3>\n        <Grid container>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"N\"\n              value={ N }\n              onChange={ onChange(true, 'N') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"x0\"\n              value={ x0 }\n              onChange={ onChange(false, 'x0') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"y0\"\n              value={ y0 }\n              onChange={ onChange(false, 'y0') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"X\"\n              value={ X }\n              onChange={ onChange(false, 'X') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n        <h3>Input grid range here:</h3>\n        <Grid container>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"startN\"\n              value={ startN }\n              onChange={ onChange(true, 'startN') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField\n              id=\"outlined-number\"\n              label=\"endN\"\n              value={ endN }\n              onChange={ onChange(true, 'endN') }\n              type=\"number\"\n              InputLabelProps={ {\n                shrink: true,\n              } }\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default ControlBoard\n","import React from 'react'\nimport Plot from 'react-plotly.js'\nimport { PlotData } from 'plotly.js'\n\ntype GraphProps = {\n  graphs: {\n    x: number[],\n    y: number[],\n    name: string,\n    color: string\n  }[],\n  title: string\n}\ntype GraphState = { dimensions: { width: number } }\n\nclass Graph extends React.Component<GraphProps, GraphState> {\n  state = {\n    dimensions: {\n      width: 0\n    },\n  }\n  container: any\n\n  componentDidMount () {\n    this.setState({\n      dimensions: {\n        width: this.container.offsetWidth * 0.95\n      },\n    })\n  }\n\n  renderContent () {\n    const { graphs, title } = this.props\n    const { dimensions } = this.state\n    const data = graphs.map(({ x, y, name, color }) => (\n      {\n        x,\n        y,\n        name,\n        type: 'scatter',\n        line: { shape: 'spline' },\n        mode: 'lines',\n        marker: { color },\n      }\n    )) as Partial<PlotData>[]\n    return (\n      <Plot\n        data={ data }\n        layout={ { width: dimensions.width, height: dimensions.width * 3 / 5, title} }\n      />\n    )\n  }\n\n  render () {\n    const { dimensions } = this.state\n    return (\n      <div ref={ el => this.container = el }>{ dimensions && this.renderContent() }</div>\n    )\n  }\n\n}\n\nexport default Graph\n","import Graph from './Graph'\nimport React from 'react'\nimport ISolution from '../core/ISolution'\n\ntype SolutionsGraphProps = {\n  x0: number,\n  y0: number,\n  X: number,\n  N: number,\n  solutions: ISolution[]\n}\n\nfunction getColorByName (name: string): string {\n  switch (name) {\n    case 'Exact solution':\n      return 'green'\n    case 'Euler solution':\n      return 'red'\n    case 'Improved euler solution':\n      return 'orange'\n    case 'Runge-Kutte solution':\n      return 'blue'\n    default:\n      return 'black'\n  }\n}\n\nclass SolutionsGraph extends React.Component<SolutionsGraphProps> {\n  evaluateGraphs () {\n    const { solutions, x0, y0, N, X } = this.props\n    if (N > 0 && X > x0) {\n      try {\n        return solutions.map((solution, i) => (\n          {\n            ...solution.solveIVP(x0, y0, X, N),\n            name: solution.name,\n            color: getColorByName(solution.name)\n          }\n        ))\n      } catch (e) {\n        return []\n      }\n    }\n    return []\n  }\n\n  render () {\n    return <Graph title='Solutions' graphs={ this.evaluateGraphs() }/>\n  }\n}\n\nexport default SolutionsGraph\n","import Graph from './Graph'\nimport React from 'react'\nimport ExactSolution from '../core/ExactSolution'\nimport NumericalSolution from '../core/NumericalSolution'\n\ntype LocalErrorGraphProps = {\n  x0: number,\n  y0: number,\n  X: number,\n  N: number,\n  solutions: NumericalSolution[],\n  exactSolution: ExactSolution\n}\n\nfunction getColorByName (name: string): string {\n  switch (name) {\n    case 'Exact solution':\n      return 'green'\n    case 'Euler solution':\n      return 'red'\n    case 'Improved euler solution':\n      return 'orange'\n    case 'Runge-Kutte solution':\n      return 'blue'\n    default:\n      return 'black'\n  }\n}\n\nclass LocalErrorGraph extends React.Component<LocalErrorGraphProps> {\n  evaluateLocalErrors () {\n    const { x0, y0, X, N, solutions, exactSolution } = this.props\n    if (N > 0 && X > x0) {\n      try {\n        return solutions.map((solution, i) => (\n          {\n            ...solution.localErrors(x0, y0, X, N, exactSolution),\n            name: solution.name,\n            color: getColorByName(solution.name)\n          }\n        ))\n      } catch (e) {\n        return []\n      }\n    }\n    return []\n  }\n\n  render () {\n    return <Graph title='Local errors' graphs={ this.evaluateLocalErrors() }/>\n  }\n}\n\nexport default LocalErrorGraph\n","import Graph from './Graph'\nimport React from 'react'\nimport NumericalSolution from '../core/NumericalSolution'\nimport ExactSolution from '../core/ExactSolution'\n\ntype GlobalErrorGraphProps = {\n  x0: number,\n  y0: number,\n  X: number,\n  startN: number,\n  endN: number,\n  solutions: NumericalSolution[],\n  exactSolution: ExactSolution\n}\n\nfunction getColorByName (name: string): string {\n  switch (name) {\n    case 'Exact solution':\n      return 'green'\n    case 'Euler solution':\n      return 'red'\n    case 'Improved euler solution':\n      return 'orange'\n    case 'Runge-Kutte solution':\n      return 'blue'\n    default:\n      return 'black'\n  }\n}\n\nclass GlobalErrorGraph extends React.Component<GlobalErrorGraphProps> {\n  evaluateGlobalErrors () {\n    const { x0, y0, X, solutions, startN, endN, exactSolution } = this.props\n    if (endN > startN && X > x0) {\n      try {\n        return solutions.map(solution => (\n          {\n            ...solution.globalErrors(x0, y0, X, startN, endN, exactSolution),\n            name: solution.name,\n            color: getColorByName(solution.name)\n          }\n        ))\n      } catch (e) {\n        return []\n      }\n    }\n    return []\n  }\n\n  shouldComponentUpdate (nextProps: Readonly<GlobalErrorGraphProps>, nextState: Readonly<{}>, nextContext: any) {\n    return this.props.x0 !== nextProps.x0 ||\n      this.props.y0 !== nextProps.y0 ||\n      this.props.X !== nextProps.X ||\n      this.props.endN !== nextProps.endN ||\n      this.props.startN !== nextProps.startN ||\n      this.props.solutions !== nextProps.solutions ||\n      this.props.exactSolution !== nextProps.exactSolution\n  }\n\n  render () {\n    return <Graph title='Global errors' graphs={ this.evaluateGlobalErrors() }/>\n  }\n}\n\nexport default GlobalErrorGraph\n","import React from 'react'\nimport FunctionXY from './core/FunctionXY'\nimport FunctionCX from './core/FunctionCX'\nimport ExactSolution from './core/ExactSolution'\nimport EulerSolution from './core/EulerSolution'\nimport RungeKutteSolution from './core/RungeKutteSolution'\nimport ImprovedEulerSolution from './core/ImprovedEulerSolution'\nimport ControlBoard from './components/ControlBoard'\nimport { Grid } from '@material-ui/core'\nimport ISolution from './core/ISolution'\nimport NumericalSolution from './core/NumericalSolution'\nimport SolutionsGraph from './components/SolutionsGraph'\nimport LocalErrorGraph from './components/LocalErrorGraph'\nimport GlobalErrorGraph from './components/GlobalErrorGraph'\n\ntype AppState = {\n  yPrime: string,\n  y: string,\n  c: string,\n  N: number,\n  startN: number,\n  endN: number,\n  X: number,\n  x0: number,\n  y0: number\n}\n\nclass App extends React.Component<{}, AppState> {\n  derivative: FunctionXY\n  analyticalSolution: FunctionCX\n\n  exact: ExactSolution\n  euler: EulerSolution\n  improvedEuler: ImprovedEulerSolution\n  rungeKutte: RungeKutteSolution\n\n  numericalSolutions: NumericalSolution[]\n  solutions: ISolution[]\n\n  constructor (props: {}) {\n    super(props)\n    this.derivative = new FunctionXY('2*x*(x**2+y)')\n    this.analyticalSolution = new FunctionCX('c*exp(x**2)-x**2-1')\n    this.exact = new ExactSolution(this.analyticalSolution, new FunctionXY('(y+x**2+1)/exp(x**2)'))\n    this.euler = new EulerSolution(this.derivative)\n    this.improvedEuler = new ImprovedEulerSolution(this.derivative)\n    this.rungeKutte = new RungeKutteSolution(this.derivative)\n\n    this.numericalSolutions = [this.euler, this.improvedEuler, this.rungeKutte]\n    this.solutions = [this.exact as ISolution].concat(this.numericalSolutions as ISolution[])\n\n    this.state = {\n      yPrime: '2*x*(x**2+y)',\n      y: 'c*exp(x**2)-x**2-1',\n      c: '(y+x**2+1)/exp(x**2)',\n      N: 50,\n      startN: 5,\n      endN: 60,\n      X: 3,\n      x0: 0,\n      y0: 0\n    }\n  }\n\n  change (isInt: boolean, key: keyof AppState) {\n    return (event: React.ChangeEvent<HTMLInputElement>) => {\n      const v = (isInt ? parseInt : parseFloat)(event.target.value)\n      this.setState(prevState => ({\n        ...prevState,\n        [key]: v\n      }))\n    }\n  }\n\n  changeFunc (key: keyof AppState) {\n    return (event: React.ChangeEvent<HTMLInputElement>) => {\n      const func = event.target.value\n\n      this.derivative = new FunctionXY(key === 'yPrime' ? func : this.state.yPrime)\n      this.analyticalSolution = new FunctionCX(key === 'y' ? func : this.state.y)\n      this.exact = new ExactSolution(this.analyticalSolution, new FunctionXY(key === 'c' ? func : this.state.c))\n      this.euler = new EulerSolution(this.derivative)\n      this.improvedEuler = new ImprovedEulerSolution(this.derivative)\n      this.rungeKutte = new RungeKutteSolution(this.derivative)\n\n      this.numericalSolutions = [this.euler, this.improvedEuler, this.rungeKutte]\n      this.solutions = [this.exact as ISolution].concat(this.numericalSolutions as ISolution[])\n\n      this.setState(prevState => ({\n        ...prevState,\n        [key]: func\n      }))\n    }\n  }\n\n  render () {\n    const { x0, y0, X, N, startN, endN, yPrime, y, c } = this.state\n\n    return (\n      <div className=\"App\">\n        <Grid container spacing={ 2 }>\n          <Grid item md={ 12 } lg={ 6 }>\n            <SolutionsGraph x0={ x0 } y0={ y0 } N={ N } X={ X } solutions={ this.solutions }/>\n          </Grid>\n          <Grid item md={ 12 } lg={ 6 }>\n            <LocalErrorGraph x0={ x0 } y0={ y0 } N={ N } X={ X } solutions={ this.numericalSolutions }\n                             exactSolution={ this.exact }/>\n          </Grid>\n          <Grid item md={ 12 } lg={ 6 }>\n            <GlobalErrorGraph x0={ x0 } y0={ y0 } startN={ startN } endN={ endN } X={ X }\n                              solutions={ this.numericalSolutions } exactSolution={ this.exact }/>\n          </Grid>\n          <Grid item md={ 12 } lg={ 6 }>\n            <ControlBoard startN={ startN } endN={ endN } N={ N } X={ X } x0={ x0 } y0={ y0 } yPrime={ yPrime } y={ y }\n                          c={ c } onChange={ this.change.bind(this) } onChangeFunc={ this.changeFunc.bind(this) }/>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}